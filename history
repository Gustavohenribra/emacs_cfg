;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(imenu--history-list xref--read-pattern-history command-history compile-history eglot-command-history yes-or-no-p-history goto-line-history ivy-history swiper-history read-number-history buffer-name-history minibuffer-history extended-command-history file-name-history))
(setq imenu--history-list '(#("useCallback" 0 10 (ivy-index 0 face web-mode-function-call-face part-side jsx) 10 11 (ivy-index 0 face web-mode-function-call-face part-side jsx)) #("console" 0 7 (ivy-index 0 part-side jsx))))
(setq xref--read-pattern-history '("addImage" "class" "addImage" "console" "console.log"))
(setq command-history '((find-file "c:/Users/Gusta/.emacs" t) (find-file "c:/Users/Gusta/.emacs" t) (find-file "c:/Users/Gusta/.emacs" t) (package-menu-mark-install 1) (execute-extended-command nil "package-menu-mark-install" #("pack
c-hungry-backspace   Delete the preceding character or all preceding whitesp…
package-menu-mark-install (i)   Mark the current package for installation and move to t…
use-package-lint   Check for errors in ‘use-package’ declarations.         
package-menu-describe-package (?)   Describe the current package.                           
package-menu-clear-filter (/ /)   Clear any filter currently applied to the \"*Packages*\" …
just-one-space   Delete all spaces and tabs around point, leaving one sp…
tildify-space   Convert space before point into a hard space if the con…
package-autoremove   Remove packages that are no longer needed.              
package-menu-backup-unmark (DEL)   Back up one line and clear any marks on that line’s pac…" 5 19 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 19 22 (face (ivy-current-match ivy-minibuffer-match-face-2) mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 22 23 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 23 24 (face ivy-current-match marginalia--align t display (space :align-to (+ left 50))) 24 26 (face ivy-current-match) 26 82 (help-echo "Delete the preceding character or all preceding whitespace" face (ivy-current-match marginalia-documentation)) 83 86 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 86 108 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 109 112 (face marginalia-key) 112 113 (marginalia--align t display (space :align-to (+ left 50))) 115 171 (help-echo "Mark the current package for installation and move to the next line." face marginalia-documentation) 172 176 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 176 179 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 179 188 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 188 189 (marginalia--align t display (space :align-to (+ left 50))) 191 247 (face marginalia-documentation) 248 251 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 251 270 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 270 273 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 273 277 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 278 281 (face marginalia-key) 281 282 (marginalia--align t display (space :align-to (+ left 50))) 284 340 (face marginalia-documentation) 341 344 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 344 366 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 367 372 (face marginalia-key) 372 373 (marginalia--align t display (space :align-to (+ left 50))) 375 431 (help-echo "Clear any filter currently applied to the \"*Packages*\" buffer." face marginalia-documentation) 432 442 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 442 445 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 445 446 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 446 447 (marginalia--align t display (space :align-to (+ left 50))) 449 505 (help-echo "Delete all spaces and tabs around point, leaving one space (or N spaces)." face marginalia-documentation) 506 515 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 515 518 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 518 519 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 519 520 (marginalia--align t display (space :align-to (+ left 50))) 522 578 (help-echo "Convert space before point into a hard space if the context is right." face marginalia-documentation) 579 582 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 582 597 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 597 598 (marginalia--align t display (space :align-to (+ left 50))) 600 656 (face marginalia-documentation) 657 660 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 660 683 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 684 689 (face marginalia-key) 689 690 (marginalia--align t display (space :align-to (+ left 50))) 692 748 (help-echo "Back up one line and clear any marks on that line’s package." face marginalia-documentation))) (savehist-mode 'toggle) (execute-extended-command nil "savehist-mode" #("savehis
savehist-save   Save the values of minibuffer history variables.        
savehist-mode   Toggle saving of minibuffer history (Savehist mode).    " 8 14 (face (ivy-current-match ivy-minibuffer-match-face-2) mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 14 21 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 21 22 (face ivy-current-match marginalia--align t display (space :align-to (+ left 50))) 22 24 (face ivy-current-match) 24 80 (face (ivy-current-match marginalia-documentation)) 81 87 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 87 94 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 94 95 (marginalia--align t display (space :align-to (+ left 50))) 97 153 (face marginalia-documentation))) (savehist-mode 'toggle) (execute-extended-command nil "savehist-mode" #("savehis
savehist-save   Save the values of minibuffer history variables.        
savehist-mode   Toggle saving of minibuffer history (Savehist mode).    " 8 14 (face (ivy-current-match ivy-minibuffer-match-face-2) mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 14 21 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 21 22 (face ivy-current-match marginalia--align t display (space :align-to (+ left 50))) 22 24 (face ivy-current-match) 24 80 (face (ivy-current-match marginalia-documentation)) 81 87 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 87 94 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 94 95 (marginalia--align t display (space :align-to (+ left 50))) 97 153 (face marginalia-documentation))) (package-list-packages nil) (execute-extended-command nil "package-list-packages" #("package-lis
use-package-lint   Check for errors in ‘use-package’ declarations.         
package-show-package-list   Display PACKAGES in a *Packages* buffer.                
package-list-packages   Display a list of packages.                             
package-list-packages-no-fetch   Display a list of packages.                             " 12 16 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 16 26 (face (ivy-current-match ivy-minibuffer-match-face-2) mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 26 28 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 28 29 (face ivy-current-match marginalia--align t display (space :align-to (+ left 40))) 29 31 (face ivy-current-match) 31 87 (face (ivy-current-match marginalia-documentation)) 88 101 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 101 111 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 111 113 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 113 114 (marginalia--align t display (space :align-to (+ left 40))) 116 172 (face marginalia-documentation) 173 183 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 183 194 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 194 195 (marginalia--align t display (space :align-to (+ left 40))) 197 253 (face marginalia-documentation) 254 264 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 264 284 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 284 285 (marginalia--align t display (space :align-to (+ left 40))) 287 343 (face marginalia-documentation))) (find-file "c:/Users/Gusta/.emacs" t) (package-list-packages nil) (execute-extended-command nil "package-list-packages" #("package-l
use-package-lint   Check for errors in ‘use-package’ declarations.         
package-autoremove   Remove packages that are no longer needed.              
package-delete   Delete package PKG-DESC.                                
package-quickstart-refresh   (Re)Generate the ‘package-quickstart-file’.             
package-install   Install the package PKG.                                
package-recompile-all   Byte-compile all installed packages.                    
use-package-statistics-mode   Show current statistics gathered about ‘use-package’ de…
use-package-report   Show current statistics gathered about ‘use-package’ de…
package-show-package-list   Display PACKAGES in a *Packages* buffer.                " 10 14 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 14 22 (face (ivy-current-match ivy-minibuffer-match-face-2) mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 22 26 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 26 27 (face ivy-current-match marginalia--align t display (space :align-to (+ left 40))) 27 29 (face ivy-current-match) 29 85 (face (ivy-current-match marginalia-documentation)) 86 94 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 94 104 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 104 105 (marginalia--align t display (space :align-to (+ left 40))) 107 163 (face marginalia-documentation) 164 172 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 172 178 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 178 179 (marginalia--align t display (space :align-to (+ left 40))) 181 237 (face marginalia-documentation) 238 246 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 246 264 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 264 265 (marginalia--align t display (space :align-to (+ left 40))) 267 323 (face marginalia-documentation) 324 332 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 332 339 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 339 340 (marginalia--align t display (space :align-to (+ left 40))) 342 398 (face marginalia-documentation) 399 407 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 407 420 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 420 421 (marginalia--align t display (space :align-to (+ left 40))) 423 479 (face marginalia-documentation) 480 484 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 484 492 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 492 507 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 507 508 (marginalia--align t display (space :align-to (+ left 40))) 510 566 (help-echo "Show current statistics gathered about ‘use-package’ declarations." face marginalia-documentation) 567 571 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 571 579 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 579 585 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 585 586 (marginalia--align t display (space :align-to (+ left 40))) 588 644 (help-echo "Show current statistics gathered about ‘use-package’ declarations." face marginalia-documentation) 645 653 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 653 658 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 658 666 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 666 670 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 670 671 (marginalia--align t display (space :align-to (+ left 40))) 673 729 (face marginalia-documentation))) (eval-buffer) (execute-extended-command nil "eval-buffer" #("eva
pr-ps-file-preview   Preview PostScript file FILENAME.                       
expand-jump-to-previous-slot (C-x a p)   Move the cursor to the previous slot in the last abbrev…
magit-auto-revert-mode   Toggle Auto-Revert mode in all buffers.                 
ediff-merge-revisions-with-ancestor   Run Ediff by merging two revisions of a file with a com…
which-key-show-previous-page-cycle   Show the previous page of keys, cycling from beginning …
erevision   Run Ediff by comparing versions of a file.              
dabbrev-expand (M-/)   Expand previous word \"dynamically\".                     
tab-bar-switch-to-prev-tab   Switch to ARGth previous tab.                           
pr-ps-mode-preview   Preview major mode using ghostview.                     " 4 17 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 17 19 (face (ivy-current-match ivy-minibuffer-match-face-2) mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 19 22 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 22 23 (face ivy-current-match marginalia--align t display (space :align-to (+ left 40))) 23 25 (face ivy-current-match) 25 81 (face (ivy-current-match marginalia-documentation)) 82 99 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 99 101 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 101 110 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 111 120 (face marginalia-key) 120 121 (marginalia--align t display (space :align-to (+ left 40))) 123 179 (help-echo "Move the cursor to the previous slot in the last abbrev expansion." face marginalia-documentation) 180 192 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 192 194 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 194 202 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 202 203 (marginalia--align t display (space :align-to (+ left 40))) 205 261 (face marginalia-documentation) 262 275 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 275 277 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 277 297 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 297 298 (marginalia--align t display (space :align-to (+ left 40))) 300 356 (help-echo "Run Ediff by merging two revisions of a file with a common ancestor." face marginalia-documentation) 357 374 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 374 376 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 376 391 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 391 392 (marginalia--align t display (space :align-to (+ left 40))) 394 450 (help-echo "Show the previous page of keys, cycling from beginning to end." face marginalia-documentation) 451 453 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 453 455 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 455 460 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 460 461 (marginalia--align t display (space :align-to (+ left 40))) 463 519 (face marginalia-documentation) 520 525 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 525 527 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 527 534 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 535 540 (face marginalia-key) 540 541 (marginalia--align t display (space :align-to (+ left 40))) 543 599 (face marginalia-documentation) 600 620 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 620 622 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 622 626 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 626 627 (marginalia--align t display (space :align-to (+ left 40))) 629 685 (face marginalia-documentation) 686 699 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 699 701 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 701 704 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 704 705 (marginalia--align t display (space :align-to (+ left 40))) 707 763 (face marginalia-documentation))) (find-file "c:/Users/Gusta/.emacs" t) (package-show-package-list) (execute-extended-command nil "package-show-package-list" #("package-lis
use-package-lint   Check for errors in ‘use-package’ declarations.         
package-show-package-list   Display PACKAGES in a *Packages* buffer.                
package-list-packages   Display a list of packages.                             
package-list-packages-no-fetch   Display a list of packages.                             " 12 16 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 16 26 (face (ivy-current-match ivy-minibuffer-match-face-2) mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 26 28 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 28 29 (face ivy-current-match marginalia--align t display (space :align-to (+ left 40))) 29 31 (face ivy-current-match) 31 87 (face (ivy-current-match marginalia-documentation)) 88 101 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 101 111 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 111 113 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 113 114 (marginalia--align t display (space :align-to (+ left 40))) 116 172 (face marginalia-documentation) 173 183 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 183 194 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 194 195 (marginalia--align t display (space :align-to (+ left 40))) 197 253 (face marginalia-documentation) 254 264 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 264 284 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 284 285 (marginalia--align t display (space :align-to (+ left 40))) 287 343 (face marginalia-documentation))) (find-file "c:/Users/Gusta/.emacs" t) (find-file "c:/Users/Gusta/.emacs" t) (eval-buffer) (execute-extended-command nil "eval-buffer" #("eval
checkdoc-eval-current-buffer   Evaluate and check documentation for the current buffer.
eval-expression (M-:)   Evaluate EXP and print value in the echo area.          
eval-buffer   Execute the accessible portion of current buffer as Lis…
eval-defun (C-M-x)   Evaluate top-level form around point and instrument it …
pp-eval-expression   Evaluate EXPRESSION and pretty-print its value.         
pp-eval-last-sexp   Run ‘pp-eval-expression’ on sexp before point.          
eval-region   Execute the region as Lisp code.                        
elisp-eval-region-or-buffer (C-c C-e)   Evaluate the forms in the active region or the whole cu…
checkdoc-eval-defun   Evaluate the current form with ‘eval-defun’ and check i…" 5 14 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 14 17 (face (ivy-current-match ivy-minibuffer-match-face-2) mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 17 33 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 33 34 (face ivy-current-match marginalia--align t display (space :align-to (+ left 50))) 34 36 (face ivy-current-match) 36 92 (face (ivy-current-match marginalia-documentation)) 93 96 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 96 108 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 109 114 (face marginalia-key) 114 115 (marginalia--align t display (space :align-to (+ left 50))) 117 173 (face marginalia-documentation) 174 177 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 177 185 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 185 186 (marginalia--align t display (space :align-to (+ left 50))) 188 244 (help-echo "Execute the accessible portion of current buffer as Lisp code." face marginalia-documentation) 245 248 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 248 255 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 256 263 (face marginalia-key) 263 264 (marginalia--align t display (space :align-to (+ left 50))) 266 322 (help-echo "Evaluate top-level form around point and instrument it if EDEBUG-IT is non-nil." face marginalia-documentation) 323 326 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 326 329 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 329 341 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 341 342 (marginalia--align t display (space :align-to (+ left 50))) 344 400 (face marginalia-documentation) 401 404 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 404 407 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 407 418 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 418 419 (marginalia--align t display (space :align-to (+ left 50))) 421 477 (face marginalia-documentation) 478 481 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 481 489 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 489 490 (marginalia--align t display (space :align-to (+ left 50))) 492 548 (face marginalia-documentation) 549 555 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 555 558 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 558 576 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 577 586 (face marginalia-key) 586 587 (marginalia--align t display (space :align-to (+ left 50))) 589 645 (help-echo "Evaluate the forms in the active region or the whole current buffer." face marginalia-documentation) 646 655 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 655 658 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 658 665 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 665 666 (marginalia--align t display (space :align-to (+ left 50))) 668 724 (help-echo "Evaluate the current form with ‘eval-defun’ and check its documentation." face marginalia-documentation))) (eval-buffer) (execute-extended-command nil "eval-buffer" #("eval
checkdoc-eval-current-buffer   Evaluate and check documentation for the current buffer.
eval-expression (M-:)   Evaluate EXP and print value in the echo area.          
eval-buffer   Execute the accessible portion of current buffer as Lis…
eval-defun (C-M-x)   Evaluate top-level form around point and instrument it …
pp-eval-expression   Evaluate EXPRESSION and pretty-print its value.         
pp-eval-last-sexp   Run ‘pp-eval-expression’ on sexp before point.          
eval-region   Execute the region as Lisp code.                        
elisp-eval-region-or-buffer (C-c C-e)   Evaluate the forms in the active region or the whole cu…
checkdoc-eval-defun   Evaluate the current form with ‘eval-defun’ and check i…" 5 14 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 14 17 (face (ivy-current-match ivy-minibuffer-match-face-2) mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 17 33 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 33 34 (face ivy-current-match marginalia--align t display (space :align-to (+ left 50))) 34 36 (face ivy-current-match) 36 92 (face (ivy-current-match marginalia-documentation)) 93 96 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 96 108 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 109 114 (face marginalia-key) 114 115 (marginalia--align t display (space :align-to (+ left 50))) 117 173 (face marginalia-documentation) 174 177 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 177 185 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 185 186 (marginalia--align t display (space :align-to (+ left 50))) 188 244 (help-echo "Execute the accessible portion of current buffer as Lisp code." face marginalia-documentation) 245 248 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 248 255 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 256 263 (face marginalia-key) 263 264 (marginalia--align t display (space :align-to (+ left 50))) 266 322 (help-echo "Evaluate top-level form around point and instrument it if EDEBUG-IT is non-nil." face marginalia-documentation) 323 326 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 326 329 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 329 341 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 341 342 (marginalia--align t display (space :align-to (+ left 50))) 344 400 (face marginalia-documentation) 401 404 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 404 407 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 407 418 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 418 419 (marginalia--align t display (space :align-to (+ left 50))) 421 477 (face marginalia-documentation) 478 481 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 481 489 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 489 490 (marginalia--align t display (space :align-to (+ left 50))) 492 548 (face marginalia-documentation) 549 555 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 555 558 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 558 576 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 577 586 (face marginalia-key) 586 587 (marginalia--align t display (space :align-to (+ left 50))) 589 645 (help-echo "Evaluate the forms in the active region or the whole current buffer." face marginalia-documentation) 646 655 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 655 658 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 658 665 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 665 666 (marginalia--align t display (space :align-to (+ left 50))) 668 724 (help-echo "Evaluate the current form with ‘eval-defun’ and check its documentation." face marginalia-documentation))) (eval-buffer) (execute-extended-command nil "eval-buffer" #("eval
checkdoc-eval-current-buffer   Evaluate and check documentation for the current buffer.
eval-expression (M-:)   Evaluate EXP and print value in the echo area.          
eval-buffer   Execute the accessible portion of current buffer as Lis…
eval-defun (C-M-x)   Evaluate top-level form around point and instrument it …
pp-eval-expression   Evaluate EXPRESSION and pretty-print its value.         
pp-eval-last-sexp   Run ‘pp-eval-expression’ on sexp before point.          
eval-region   Execute the region as Lisp code.                        
elisp-eval-region-or-buffer (C-c C-e)   Evaluate the forms in the active region or the whole cu…
checkdoc-eval-defun   Evaluate the current form with ‘eval-defun’ and check i…" 5 14 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 14 17 (face (ivy-current-match ivy-minibuffer-match-face-2) mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 17 33 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 33 34 (face ivy-current-match marginalia--align t display (space :align-to (+ left 50))) 34 36 (face ivy-current-match) 36 92 (face (ivy-current-match marginalia-documentation)) 93 96 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 96 108 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 109 114 (face marginalia-key) 114 115 (marginalia--align t display (space :align-to (+ left 50))) 117 173 (face marginalia-documentation) 174 177 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 177 185 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 185 186 (marginalia--align t display (space :align-to (+ left 50))) 188 244 (help-echo "Execute the accessible portion of current buffer as Lisp code." face marginalia-documentation) 245 248 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 248 255 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 256 263 (face marginalia-key) 263 264 (marginalia--align t display (space :align-to (+ left 50))) 266 322 (help-echo "Evaluate top-level form around point and instrument it if EDEBUG-IT is non-nil." face marginalia-documentation) 323 326 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 326 329 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 329 341 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 341 342 (marginalia--align t display (space :align-to (+ left 50))) 344 400 (face marginalia-documentation) 401 404 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 404 407 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 407 418 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 418 419 (marginalia--align t display (space :align-to (+ left 50))) 421 477 (face marginalia-documentation) 478 481 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 481 489 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 489 490 (marginalia--align t display (space :align-to (+ left 50))) 492 548 (face marginalia-documentation) 549 555 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 555 558 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 558 576 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 577 586 (face marginalia-key) 586 587 (marginalia--align t display (space :align-to (+ left 50))) 589 645 (help-echo "Evaluate the forms in the active region or the whole current buffer." face marginalia-documentation) 646 655 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 655 658 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 658 665 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 665 666 (marginalia--align t display (space :align-to (+ left 50))) 668 724 (help-echo "Evaluate the current form with ‘eval-defun’ and check its documentation." face marginalia-documentation))) (eval-buffer) (execute-extended-command nil "eval-buffer" #("eval
checkdoc-eval-current-buffer   Evaluate and check documentation for the current buffer.
eval-expression (M-:)   Evaluate EXP and print value in the echo area.          
eval-buffer   Execute the accessible portion of current buffer as Lis…
eval-defun (C-M-x)   Evaluate top-level form around point and instrument it …
pp-eval-expression   Evaluate EXPRESSION and pretty-print its value.         
pp-eval-last-sexp   Run ‘pp-eval-expression’ on sexp before point.          
eval-region   Execute the region as Lisp code.                        
elisp-eval-region-or-buffer (C-c C-e)   Evaluate the forms in the active region or the whole cu…
checkdoc-eval-defun   Evaluate the current form with ‘eval-defun’ and check i…" 5 14 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 14 17 (face (ivy-current-match ivy-minibuffer-match-face-2) mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 17 33 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 33 34 (face ivy-current-match marginalia--align t display (space :align-to (+ left 50))) 34 36 (face ivy-current-match) 36 92 (face (ivy-current-match marginalia-documentation)) 93 96 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 96 108 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 109 114 (face marginalia-key) 114 115 (marginalia--align t display (space :align-to (+ left 50))) 117 173 (face marginalia-documentation) 174 177 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 177 185 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 185 186 (marginalia--align t display (space :align-to (+ left 50))) 188 244 (help-echo "Execute the accessible portion of current buffer as Lisp code." face marginalia-documentation) 245 248 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 248 255 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 256 263 (face marginalia-key) 263 264 (marginalia--align t display (space :align-to (+ left 50))) 266 322 (help-echo "Evaluate top-level form around point and instrument it if EDEBUG-IT is non-nil." face marginalia-documentation) 323 326 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 326 329 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 329 341 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 341 342 (marginalia--align t display (space :align-to (+ left 50))) 344 400 (face marginalia-documentation) 401 404 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 404 407 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 407 418 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 418 419 (marginalia--align t display (space :align-to (+ left 50))) 421 477 (face marginalia-documentation) 478 481 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 481 489 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 489 490 (marginalia--align t display (space :align-to (+ left 50))) 492 548 (face marginalia-documentation) 549 555 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 555 558 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 558 576 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 577 586 (face marginalia-key) 586 587 (marginalia--align t display (space :align-to (+ left 50))) 589 645 (help-echo "Evaluate the forms in the active region or the whole current buffer." face marginalia-documentation) 646 655 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 655 658 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 658 665 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 665 666 (marginalia--align t display (space :align-to (+ left 50))) 668 724 (help-echo "Evaluate the current form with ‘eval-defun’ and check its documentation." face marginalia-documentation))) (eval-buffer) (execute-extended-command nil "eval-buffer" #("eval
checkdoc-eval-current-buffer   Evaluate and check documentation for the current buffer.
eval-expression (M-:)   Evaluate EXP and print value in the echo area.          
eval-buffer   Execute the accessible portion of current buffer as Lis…
eval-defun (C-M-x)   Evaluate top-level form around point and instrument it …
pp-eval-expression   Evaluate EXPRESSION and pretty-print its value.         
pp-eval-last-sexp   Run ‘pp-eval-expression’ on sexp before point.          
eval-region   Execute the region as Lisp code.                        
elisp-eval-region-or-buffer (C-c C-e)   Evaluate the forms in the active region or the whole cu…
checkdoc-eval-defun   Evaluate the current form with ‘eval-defun’ and check i…" 5 14 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 14 17 (face (ivy-current-match ivy-minibuffer-match-face-2) mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 17 33 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 33 34 (face ivy-current-match marginalia--align t display (space :align-to (+ left 50))) 34 36 (face ivy-current-match) 36 92 (face (ivy-current-match marginalia-documentation)) 93 96 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 96 108 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 109 114 (face marginalia-key) 114 115 (marginalia--align t display (space :align-to (+ left 50))) 117 173 (face marginalia-documentation) 174 177 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 177 185 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 185 186 (marginalia--align t display (space :align-to (+ left 50))) 188 244 (help-echo "Execute the accessible portion of current buffer as Lisp code." face marginalia-documentation) 245 248 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 248 255 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 256 263 (face marginalia-key) 263 264 (marginalia--align t display (space :align-to (+ left 50))) 266 322 (help-echo "Evaluate top-level form around point and instrument it if EDEBUG-IT is non-nil." face marginalia-documentation) 323 326 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 326 329 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 329 341 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 341 342 (marginalia--align t display (space :align-to (+ left 50))) 344 400 (face marginalia-documentation) 401 404 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 404 407 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 407 418 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 418 419 (marginalia--align t display (space :align-to (+ left 50))) 421 477 (face marginalia-documentation) 478 481 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 481 489 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 489 490 (marginalia--align t display (space :align-to (+ left 50))) 492 548 (face marginalia-documentation) 549 555 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 555 558 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 558 576 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 577 586 (face marginalia-key) 586 587 (marginalia--align t display (space :align-to (+ left 50))) 589 645 (help-echo "Evaluate the forms in the active region or the whole current buffer." face marginalia-documentation) 646 655 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 655 658 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 658 665 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 665 666 (marginalia--align t display (space :align-to (+ left 50))) 668 724 (help-echo "Evaluate the current form with ‘eval-defun’ and check its documentation." face marginalia-documentation))) (eval-buffer) (execute-extended-command nil "eval-buffer" #("eval
checkdoc-eval-current-buffer   Evaluate and check documentation for the current buffer.
eval-expression (M-:)   Evaluate EXP and print value in the echo area.          
eval-buffer   Execute the accessible portion of current buffer as Lis…
eval-defun (C-M-x)   Evaluate top-level form around point and instrument it …
pp-eval-expression   Evaluate EXPRESSION and pretty-print its value.         
pp-eval-last-sexp   Run ‘pp-eval-expression’ on sexp before point.          
eval-region   Execute the region as Lisp code.                        
elisp-eval-region-or-buffer (C-c C-e)   Evaluate the forms in the active region or the whole cu…
checkdoc-eval-defun   Evaluate the current form with ‘eval-defun’ and check i…" 5 14 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 14 17 (face (ivy-current-match ivy-minibuffer-match-face-2) mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 17 33 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 33 34 (face ivy-current-match marginalia--align t display (space :align-to (+ left 50))) 34 36 (face ivy-current-match) 36 92 (face (ivy-current-match marginalia-documentation)) 93 96 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 96 108 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 109 114 (face marginalia-key) 114 115 (marginalia--align t display (space :align-to (+ left 50))) 117 173 (face marginalia-documentation) 174 177 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 177 185 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 185 186 (marginalia--align t display (space :align-to (+ left 50))) 188 244 (help-echo "Execute the accessible portion of current buffer as Lisp code." face marginalia-documentation) 245 248 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 248 255 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 256 263 (face marginalia-key) 263 264 (marginalia--align t display (space :align-to (+ left 50))) 266 322 (help-echo "Evaluate top-level form around point and instrument it if EDEBUG-IT is non-nil." face marginalia-documentation) 323 326 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 326 329 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 329 341 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 341 342 (marginalia--align t display (space :align-to (+ left 50))) 344 400 (face marginalia-documentation) 401 404 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 404 407 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 407 418 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 418 419 (marginalia--align t display (space :align-to (+ left 50))) 421 477 (face marginalia-documentation) 478 481 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 481 489 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 489 490 (marginalia--align t display (space :align-to (+ left 50))) 492 548 (face marginalia-documentation) 549 555 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 555 558 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 558 576 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 577 586 (face marginalia-key) 586 587 (marginalia--align t display (space :align-to (+ left 50))) 589 645 (help-echo "Evaluate the forms in the active region or the whole current buffer." face marginalia-documentation) 646 655 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 655 658 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 658 665 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 665 666 (marginalia--align t display (space :align-to (+ left 50))) 668 724 (help-echo "Evaluate the current form with ‘eval-defun’ and check its documentation." face marginalia-documentation))) (eval-buffer) (execute-extended-command nil "eval-buffer" #("eval
checkdoc-eval-current-buffer   Evaluate and check documentation for the current buffer.
eval-expression (M-:)   Evaluate EXP and print value in the echo area.          
eval-buffer   Execute the accessible portion of current buffer as Lis…
eval-defun (C-M-x)   Evaluate top-level form around point and instrument it …
pp-eval-expression   Evaluate EXPRESSION and pretty-print its value.         
pp-eval-last-sexp   Run ‘pp-eval-expression’ on sexp before point.          
eval-region   Execute the region as Lisp code.                        
elisp-eval-region-or-buffer (C-c C-e)   Evaluate the forms in the active region or the whole cu…
checkdoc-eval-defun   Evaluate the current form with ‘eval-defun’ and check i…" 5 14 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 14 17 (face (ivy-current-match ivy-minibuffer-match-face-2) mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 17 33 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 33 34 (face ivy-current-match marginalia--align t display (space :align-to (+ left 50))) 34 36 (face ivy-current-match) 36 92 (face (ivy-current-match marginalia-documentation)) 93 96 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 96 108 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 109 114 (face marginalia-key) 114 115 (marginalia--align t display (space :align-to (+ left 50))) 117 173 (face marginalia-documentation) 174 177 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 177 185 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 185 186 (marginalia--align t display (space :align-to (+ left 50))) 188 244 (help-echo "Execute the accessible portion of current buffer as Lisp code." face marginalia-documentation) 245 248 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 248 255 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 256 263 (face marginalia-key) 263 264 (marginalia--align t display (space :align-to (+ left 50))) 266 322 (help-echo "Evaluate top-level form around point and instrument it if EDEBUG-IT is non-nil." face marginalia-documentation) 323 326 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 326 329 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 329 341 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 341 342 (marginalia--align t display (space :align-to (+ left 50))) 344 400 (face marginalia-documentation) 401 404 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 404 407 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 407 418 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 418 419 (marginalia--align t display (space :align-to (+ left 50))) 421 477 (face marginalia-documentation) 478 481 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 481 489 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 489 490 (marginalia--align t display (space :align-to (+ left 50))) 492 548 (face marginalia-documentation) 549 555 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 555 558 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 558 576 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 577 586 (face marginalia-key) 586 587 (marginalia--align t display (space :align-to (+ left 50))) 589 645 (help-echo "Evaluate the forms in the active region or the whole current buffer." face marginalia-documentation) 646 655 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 655 658 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 658 665 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 665 666 (marginalia--align t display (space :align-to (+ left 50))) 668 724 (help-echo "Evaluate the current form with ‘eval-defun’ and check its documentation." face marginalia-documentation))) (eval-buffer) (execute-extended-command nil "eval-buffer" #("eval
checkdoc-eval-current-buffer   Evaluate and check documentation for the current buffer.
eval-expression (M-:)   Evaluate EXP and print value in the echo area.          
eval-buffer   Execute the accessible portion of current buffer as Lis…
eval-defun (C-M-x)   Evaluate top-level form around point and instrument it …
pp-eval-expression   Evaluate EXPRESSION and pretty-print its value.         
pp-eval-last-sexp   Run ‘pp-eval-expression’ on sexp before point.          
eval-region   Execute the region as Lisp code.                        
elisp-eval-region-or-buffer (C-c C-e)   Evaluate the forms in the active region or the whole cu…
checkdoc-eval-defun   Evaluate the current form with ‘eval-defun’ and check i…" 5 14 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 14 17 (face (ivy-current-match ivy-minibuffer-match-face-2) mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 17 33 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 33 34 (face ivy-current-match marginalia--align t display (space :align-to (+ left 50))) 34 36 (face ivy-current-match) 36 92 (face (ivy-current-match marginalia-documentation)) 93 96 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 96 108 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 109 114 (face marginalia-key) 114 115 (marginalia--align t display (space :align-to (+ left 50))) 117 173 (face marginalia-documentation) 174 177 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 177 185 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 185 186 (marginalia--align t display (space :align-to (+ left 50))) 188 244 (help-echo "Execute the accessible portion of current buffer as Lisp code." face marginalia-documentation) 245 248 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 248 255 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 256 263 (face marginalia-key) 263 264 (marginalia--align t display (space :align-to (+ left 50))) 266 322 (help-echo "Evaluate top-level form around point and instrument it if EDEBUG-IT is non-nil." face marginalia-documentation) 323 326 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 326 329 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 329 341 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 341 342 (marginalia--align t display (space :align-to (+ left 50))) 344 400 (face marginalia-documentation) 401 404 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 404 407 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 407 418 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 418 419 (marginalia--align t display (space :align-to (+ left 50))) 421 477 (face marginalia-documentation) 478 481 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 481 489 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 489 490 (marginalia--align t display (space :align-to (+ left 50))) 492 548 (face marginalia-documentation) 549 555 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 555 558 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 558 576 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 577 586 (face marginalia-key) 586 587 (marginalia--align t display (space :align-to (+ left 50))) 589 645 (help-echo "Evaluate the forms in the active region or the whole current buffer." face marginalia-documentation) 646 655 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 655 658 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 658 665 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 665 666 (marginalia--align t display (space :align-to (+ left 50))) 668 724 (help-echo "Evaluate the current form with ‘eval-defun’ and check its documentation." face marginalia-documentation))) (imenu nil) (execute-extended-command nil "imenu" #("imenu
web-mode-imenu-index   Returns imenu items.                                    
lsp-ui-imenu--kill   Kill imenu window.                                      
lsp-ui-imenu-buffer-mode   Minor mode ’lsp-ui-imenu-buffer-mode’.                  
imenu (M-g i)   Jump to a place in the buffer chosen using a buffer men…
lsp-ui-imenu--prev-kind   Jump to previous kind of imenu.                         
lsp-ui-imenu-mode   Mode showing imenu entries.                             
lsp-ui-imenu   Open ui-imenu in side window.                           
lsp-ui-imenu--refresh   Safe refresh imenu content.                             
lsp-ui-imenu--view" 6 15 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 15 19 (face (ivy-current-match ivy-minibuffer-match-face-2) mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 19 26 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 26 27 (face ivy-current-match marginalia--align t display (space :align-to (+ left 50))) 27 29 (face ivy-current-match) 29 85 (face (ivy-current-match marginalia-documentation)) 86 93 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 93 97 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 97 104 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 104 105 (marginalia--align t display (space :align-to (+ left 50))) 107 163 (face marginalia-documentation) 164 171 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 171 175 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 175 188 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 188 189 (marginalia--align t display (space :align-to (+ left 50))) 191 247 (face marginalia-documentation) 248 252 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 252 253 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 254 261 (face marginalia-key) 261 262 (marginalia--align t display (space :align-to (+ left 50))) 264 320 (help-echo "Jump to a place in the buffer chosen using a buffer menu or mouse menu." face marginalia-documentation) 321 328 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 328 332 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 332 344 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 344 345 (marginalia--align t display (space :align-to (+ left 50))) 347 403 (face marginalia-documentation) 404 411 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 411 415 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 415 421 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 421 422 (marginalia--align t display (space :align-to (+ left 50))) 424 480 (face marginalia-documentation) 481 488 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 488 492 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 492 493 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 493 494 (marginalia--align t display (space :align-to (+ left 50))) 496 552 (face marginalia-documentation) 553 560 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 560 564 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 564 574 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 574 575 (marginalia--align t display (space :align-to (+ left 50))) 577 633 (face marginalia-documentation) 634 641 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 641 645 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 645 652 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo))) (execute-extended-command nil "imenu" #("imenu
web-mode-imenu-index   Returns imenu items.                                    
lsp-ui-imenu--kill   Kill imenu window.                                      
lsp-ui-imenu-buffer-mode   Minor mode ’lsp-ui-imenu-buffer-mode’.                  
imenu (M-g i)   Jump to a place in the buffer chosen using a buffer men…
lsp-ui-imenu--prev-kind   Jump to previous kind of imenu.                         
lsp-ui-imenu-mode   Mode showing imenu entries.                             
lsp-ui-imenu   Open ui-imenu in side window.                           
lsp-ui-imenu--refresh   Safe refresh imenu content.                             
lsp-ui-imenu--view" 6 15 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 15 19 (face (ivy-current-match ivy-minibuffer-match-face-2) mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 19 26 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 26 27 (face ivy-current-match marginalia--align t display (space :align-to (+ left 50))) 27 29 (face ivy-current-match) 29 85 (face (ivy-current-match marginalia-documentation)) 86 93 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 93 97 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 97 104 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 104 105 (marginalia--align t display (space :align-to (+ left 50))) 107 163 (face marginalia-documentation) 164 171 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 171 175 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 175 188 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 188 189 (marginalia--align t display (space :align-to (+ left 50))) 191 247 (face marginalia-documentation) 248 252 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 252 253 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 254 261 (face marginalia-key) 261 262 (marginalia--align t display (space :align-to (+ left 50))) 264 320 (help-echo "Jump to a place in the buffer chosen using a buffer menu or mouse menu." face marginalia-documentation) 321 328 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 328 332 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 332 344 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 344 345 (marginalia--align t display (space :align-to (+ left 50))) 347 403 (face marginalia-documentation) 404 411 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 411 415 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 415 421 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 421 422 (marginalia--align t display (space :align-to (+ left 50))) 424 480 (face marginalia-documentation) 481 488 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 488 492 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 492 493 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 493 494 (marginalia--align t display (space :align-to (+ left 50))) 496 552 (face marginalia-documentation) 553 560 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 560 564 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 564 574 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 574 575 (marginalia--align t display (space :align-to (+ left 50))) 577 633 (face marginalia-documentation) 634 641 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 641 645 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 645 652 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo))) (eval-buffer) (execute-extended-command nil "eval-buffer" #("eval
checkdoc-eval-current-buffer   Evaluate and check documentation for the current buffer.
eval-expression (M-:)   Evaluate EXP and print value in the echo area.          
eval-buffer   Execute the accessible portion of current buffer as Lis…
eval-defun (C-M-x)   Evaluate top-level form around point and instrument it …
pp-eval-expression   Evaluate EXPRESSION and pretty-print its value.         
pp-eval-last-sexp   Run ‘pp-eval-expression’ on sexp before point.          
eval-region   Execute the region as Lisp code.                        
elisp-eval-region-or-buffer (C-c C-e)   Evaluate the forms in the active region or the whole cu…
checkdoc-eval-defun   Evaluate the current form with ‘eval-defun’ and check i…" 5 14 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 14 17 (face (ivy-current-match ivy-minibuffer-match-face-2) mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 17 33 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 33 34 (face ivy-current-match marginalia--align t display (space :align-to (+ left 40))) 34 36 (face ivy-current-match) 36 92 (face (ivy-current-match marginalia-documentation)) 93 96 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 96 108 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 109 114 (face marginalia-key) 114 115 (marginalia--align t display (space :align-to (+ left 40))) 117 173 (face marginalia-documentation) 174 177 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 177 185 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 185 186 (marginalia--align t display (space :align-to (+ left 40))) 188 244 (help-echo "Execute the accessible portion of current buffer as Lisp code." face marginalia-documentation) 245 248 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 248 255 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 256 263 (face marginalia-key) 263 264 (marginalia--align t display (space :align-to (+ left 40))) 266 322 (help-echo "Evaluate top-level form around point and instrument it if EDEBUG-IT is non-nil." face marginalia-documentation) 323 326 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 326 329 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 329 341 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 341 342 (marginalia--align t display (space :align-to (+ left 40))) 344 400 (face marginalia-documentation) 401 404 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 404 407 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 407 418 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 418 419 (marginalia--align t display (space :align-to (+ left 40))) 421 477 (face marginalia-documentation) 478 481 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 481 489 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 489 490 (marginalia--align t display (space :align-to (+ left 40))) 492 548 (face marginalia-documentation) 549 555 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 555 558 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 558 576 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 577 586 (face marginalia-key) 586 587 (marginalia--align t display (space :align-to (+ left 40))) 589 645 (help-echo "Evaluate the forms in the active region or the whole current buffer." face marginalia-documentation) 646 655 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 655 658 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 658 665 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 665 666 (marginalia--align t display (space :align-to (+ left 40))) 668 724 (help-echo "Evaluate the current form with ‘eval-defun’ and check its documentation." face marginalia-documentation))) (find-file "c:/Users/Gusta/.emacs" t) (eval-buffer) (execute-extended-command nil "eval-buffer" #("eval
checkdoc-eval-current-buffer   Evaluate and check documentation for the current buffer.
eval-expression (M-:)   Evaluate EXP and print value in the echo area.          
eval-buffer   Execute the accessible portion of current buffer as Lis…
eval-defun (C-M-x)   Evaluate top-level form around point and instrument it …
debugger-eval-expression   Eval an expression, in an environment like that outside…
pp-eval-expression   Evaluate EXPRESSION and pretty-print its value.         
edebug-eval-expression   Evaluate an expression in the outside environment.      
edebug-eval-mode   Mode for evaluation list buffer while in Edebug.        
edebug-delete-eval-item   Delete the item under point and redisplay.              " 5 14 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 14 17 (face (ivy-current-match ivy-minibuffer-match-face-2) mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 17 33 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 33 34 (face ivy-current-match marginalia--align t display (space :align-to (+ left 40))) 34 36 (face ivy-current-match) 36 92 (face (ivy-current-match marginalia-documentation)) 93 96 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 96 108 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 109 114 (face marginalia-key) 114 115 (marginalia--align t display (space :align-to (+ left 40))) 117 173 (face marginalia-documentation) 174 177 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 177 185 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 185 186 (marginalia--align t display (space :align-to (+ left 40))) 188 244 (help-echo "Execute the accessible portion of current buffer as Lisp code." face marginalia-documentation) 245 248 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 248 255 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 256 263 (face marginalia-key) 263 264 (marginalia--align t display (space :align-to (+ left 40))) 266 322 (help-echo "Evaluate top-level form around point and instrument it if EDEBUG-IT is non-nil." face marginalia-documentation) 323 332 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 332 335 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 335 347 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 347 348 (marginalia--align t display (space :align-to (+ left 40))) 350 406 (help-echo "Eval an expression, in an environment like that outside the debugger." face marginalia-documentation) 407 410 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 410 413 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 413 425 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 425 426 (marginalia--align t display (space :align-to (+ left 40))) 428 484 (face marginalia-documentation) 485 492 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 492 495 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 495 507 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 507 508 (marginalia--align t display (space :align-to (+ left 40))) 510 566 (face marginalia-documentation) 567 574 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 574 577 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 577 583 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 583 584 (marginalia--align t display (space :align-to (+ left 40))) 586 642 (face marginalia-documentation) 643 657 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 657 660 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 660 666 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 666 667 (marginalia--align t display (space :align-to (+ left 40))) 669 725 (face marginalia-documentation))) (find-file "c:/Users/Gusta/.emacs" t) (dired "c:/Users/Gusta/Downloads/Exa_APP/src/components/s/Scheduler/AppointmentList/Reports/" nil) (dired "c:/Users/" nil) (dired "c:/Users/Gusta/" nil) (find-file "c:/Users/Gusta/.emacs" t) (list-directory "c:/Users/Gusta/Downloads/Exa_APP/src/components/s/Scheduler/AppointmentList/" nil) (list-directory "c:/Users/Gusta/Downloads/Exa_APP/src/components/s/Scheduler/AppointmentList/Reports/" nil) (ag-project "Selecione o Tipo do") (execute-extended-command nil "ag-project" #("ag-pro
web-mode-tag-previous (C-c C-t p)   Fetch previous tag.                                     
ag-project-dired   Recursively find files in current project matching PATT…
ag-project   Guess the root of the current project and search it wit…
magit-tag-prune   Offer to delete tags missing locally from REMOTE, and v…
ag-project-files   Search using ag for a given literal search STRING,      
ag-project-regexp   Guess the root of the current project and search it wit…
ag-project-dired-regexp   Recursively find files in current project matching REGE…" 7 17 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 17 22 (face (ivy-current-match ivy-minibuffer-match-face-2) mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 22 28 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 28 29 (face ivy-current-match) 29 40 (face (ivy-current-match marginalia-key)) 40 41 (face ivy-current-match marginalia--align t display (space :align-to (+ left 70))) 41 43 (face ivy-current-match) 43 99 (face (ivy-current-match marginalia-documentation)) 100 105 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 105 116 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 116 117 (marginalia--align t display (space :align-to (+ left 70))) 119 175 (help-echo "Recursively find files in current project matching PATTERN." face marginalia-documentation) 176 181 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 181 186 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 186 187 (marginalia--align t display (space :align-to (+ left 70))) 189 245 (help-echo "Guess the root of the current project and search it with ag" face marginalia-documentation) 246 253 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 253 258 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 258 261 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 261 262 (marginalia--align t display (space :align-to (+ left 70))) 264 320 (help-echo "Offer to delete tags missing locally from REMOTE, and vice versa." face marginalia-documentation) 321 326 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 326 337 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 337 338 (marginalia--align t display (space :align-to (+ left 70))) 340 396 (face marginalia-documentation) 397 402 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 402 414 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 414 415 (marginalia--align t display (space :align-to (+ left 70))) 417 473 (help-echo "Guess the root of the current project and search it with ag" face marginalia-documentation) 474 479 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 479 497 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 497 498 (marginalia--align t display (space :align-to (+ left 70))) 500 556 (help-echo "Recursively find files in current project matching REGEXP." face marginalia-documentation))) (ag-project "Selecione o tipo do arquivo") (execute-extended-command nil "ag-project" #("ag-pro
web-mode-tag-previous (C-c C-t p)   Fetch previous tag.                                     
ag-project-dired   Recursively find files in current project matching PATT…
ag-project   Guess the root of the current project and search it wit…
magit-tag-prune   Offer to delete tags missing locally from REMOTE, and v…
ag-project-files   Search using ag for a given literal search STRING,      
ag-project-regexp   Guess the root of the current project and search it wit…
ag-project-dired-regexp   Recursively find files in current project matching REGE…" 7 17 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 17 22 (face (ivy-current-match ivy-minibuffer-match-face-2) mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 22 28 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 28 29 (face ivy-current-match) 29 40 (face (ivy-current-match marginalia-key)) 40 41 (face ivy-current-match marginalia--align t display (space :align-to (+ left 70))) 41 43 (face ivy-current-match) 43 99 (face (ivy-current-match marginalia-documentation)) 100 105 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 105 116 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 116 117 (marginalia--align t display (space :align-to (+ left 70))) 119 175 (help-echo "Recursively find files in current project matching PATTERN." face marginalia-documentation) 176 181 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 181 186 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 186 187 (marginalia--align t display (space :align-to (+ left 70))) 189 245 (help-echo "Guess the root of the current project and search it with ag" face marginalia-documentation) 246 253 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 253 258 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 258 261 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 261 262 (marginalia--align t display (space :align-to (+ left 70))) 264 320 (help-echo "Offer to delete tags missing locally from REMOTE, and vice versa." face marginalia-documentation) 321 326 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 326 337 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 337 338 (marginalia--align t display (space :align-to (+ left 70))) 340 396 (face marginalia-documentation) 397 402 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 402 414 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 414 415 (marginalia--align t display (space :align-to (+ left 70))) 417 473 (help-echo "Guess the root of the current project and search it with ag" face marginalia-documentation) 474 479 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 479 497 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 497 498 (marginalia--align t display (space :align-to (+ left 70))) 500 556 (help-echo "Recursively find files in current project matching REGEXP." face marginalia-documentation))) (find-file "c:/Users/Gusta/.emacs" t) (xref-find-apropos "addImage") (xref-find-apropos "addImage") (execute-extended-command nil "imenu" #("imenu-a
web-mode-imenu-index   Returns imenu items.                                    
lsp-ui-imenu--kill   Kill imenu window.                                      
lsp-ui-imenu-buffer-mode   Minor mode ’lsp-ui-imenu-buffer-mode’.                  
lsp-ui-imenu--prev-kind   Jump to previous kind of imenu.                         
lsp-ui-imenu-mode   Mode showing imenu entries.                             
lsp-ui-imenu--refresh   Safe refresh imenu content.                             
lsp-ui-imenu--view
imenu-add-to-menubar   Add an ‘imenu’ entry to the menu bar for the current bu…
lsp-ui-imenu--next-kind   Jump to next kind of imenu.                             " 8 17 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 17 23 (face (ivy-current-match ivy-minibuffer-match-face-2) mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 23 28 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 28 29 (face ivy-current-match marginalia--align t display (space :align-to (+ left 60))) 29 31 (face ivy-current-match) 31 87 (face (ivy-current-match marginalia-documentation)) 88 95 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 95 101 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 101 106 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 106 107 (marginalia--align t display (space :align-to (+ left 60))) 109 165 (face marginalia-documentation) 166 173 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 173 179 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 179 190 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 190 191 (marginalia--align t display (space :align-to (+ left 60))) 193 249 (face marginalia-documentation) 250 257 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 257 263 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 263 273 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 273 274 (marginalia--align t display (space :align-to (+ left 60))) 276 332 (face marginalia-documentation) 333 340 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 340 346 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 346 350 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 350 351 (marginalia--align t display (space :align-to (+ left 60))) 353 409 (face marginalia-documentation) 410 417 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 417 423 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 423 431 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 431 432 (marginalia--align t display (space :align-to (+ left 60))) 434 490 (face marginalia-documentation) 491 498 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 498 504 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 504 509 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 510 516 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 516 530 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 530 531 (marginalia--align t display (space :align-to (+ left 60))) 533 589 (help-echo "Add an ‘imenu’ entry to the menu bar for the current buffer." face marginalia-documentation) 590 597 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 597 603 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 603 613 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 613 614 (marginalia--align t display (space :align-to (+ left 60))) 616 672 (face marginalia-documentation))) (imenu nil) (imenu nil) (execute-extended-command nil "imenu" #("imenu
web-mode-imenu-index   Returns imenu items.                                    
lsp-ui-imenu--kill   Kill imenu window.                                      
lsp-ui-imenu-buffer-mode   Minor mode ’lsp-ui-imenu-buffer-mode’.                  
imenu (M-g i)   Jump to a place in the buffer chosen using a buffer men…
lsp-ui-imenu--prev-kind   Jump to previous kind of imenu.                         
lsp-ui-imenu-mode   Mode showing imenu entries.                             
lsp-ui-imenu   Open ui-imenu in side window.                           
lsp-ui-imenu--refresh   Safe refresh imenu content.                             
lsp-ui-imenu--view" 6 15 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 15 19 (face (ivy-current-match ivy-minibuffer-match-face-2) mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 19 26 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 26 27 (face ivy-current-match marginalia--align t display (space :align-to (+ left 60))) 27 29 (face ivy-current-match) 29 85 (face (ivy-current-match marginalia-documentation)) 86 93 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 93 97 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 97 104 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 104 105 (marginalia--align t display (space :align-to (+ left 60))) 107 163 (face marginalia-documentation) 164 171 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 171 175 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 175 188 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 188 189 (marginalia--align t display (space :align-to (+ left 60))) 191 247 (face marginalia-documentation) 248 252 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 252 253 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 254 261 (face marginalia-key) 261 262 (marginalia--align t display (space :align-to (+ left 60))) 264 320 (help-echo "Jump to a place in the buffer chosen using a buffer menu or mouse menu." face marginalia-documentation) 321 328 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 328 332 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 332 344 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 344 345 (marginalia--align t display (space :align-to (+ left 60))) 347 403 (face marginalia-documentation) 404 411 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 411 415 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 415 421 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 421 422 (marginalia--align t display (space :align-to (+ left 60))) 424 480 (face marginalia-documentation) 481 488 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 488 492 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 492 493 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 493 494 (marginalia--align t display (space :align-to (+ left 60))) 496 552 (face marginalia-documentation) 553 560 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 560 564 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 564 574 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 574 575 (marginalia--align t display (space :align-to (+ left 60))) 577 633 (face marginalia-documentation) 634 641 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 641 645 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 645 652 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo))) (execute-extended-command nil "find-function" #("find-fun
find-function-other-frame   Find, in another frame, the definition of FUNCTION near…
find-function-on-key-other-frame   Find, in the other frame, the function that KEY invokes.
find-function-other-window   Find, in another window, the definition of FUNCTION nea…
find-function-at-point   Find directly the function at point in the other window.
find-function-on-key   Find the function that KEY invokes.  KEY is a string.   
find-function   Find the definition of the FUNCTION near point.         
find-function-on-key-other-window   Find, in the other window, the function that KEY invoke…" 9 16 (face (ivy-current-match ivy-minibuffer-match-face-2) mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 16 34 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 34 35 (face ivy-current-match marginalia--align t display (space :align-to (+ left 60))) 35 37 (face ivy-current-match) 37 93 (help-echo "Find, in another frame, the definition of FUNCTION near point." face (ivy-current-match marginalia-documentation)) 94 101 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 101 126 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 126 127 (marginalia--align t display (space :align-to (+ left 60))) 129 185 (face marginalia-documentation) 186 193 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 193 212 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 212 213 (marginalia--align t display (space :align-to (+ left 60))) 215 271 (help-echo "Find, in another window, the definition of FUNCTION near point." face marginalia-documentation) 272 279 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 279 294 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 294 295 (marginalia--align t display (space :align-to (+ left 60))) 297 353 (face marginalia-documentation) 354 361 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 361 374 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 374 375 (marginalia--align t display (space :align-to (+ left 60))) 377 433 (face marginalia-documentation) 434 441 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 441 447 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 447 448 (marginalia--align t display (space :align-to (+ left 60))) 450 506 (face marginalia-documentation) 507 514 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 514 540 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 540 541 (marginalia--align t display (space :align-to (+ left 60))) 543 599 (help-echo "Find, in the other window, the function that KEY invokes." face marginalia-documentation))) (helpful-callable 'w32-set-console-output-codepage) (apropos-documentation '("console") nil) (apropos-documentation "console.log" nil) (xref-find-apropos "class") (xref-find-apropos "addImage") (xref-find-apropos "console") (xref-find-apropos "console.log") (xref-find-definitions #("console" 0 7 (identifier-at-point t part-side jsx))) (execute-extended-command nil "xref-find-definitions" #("xref-find
xref-find-definitions-at-mouse   Find the definition of identifier at or around mouse cl…
xref-find-definitions-other-window (C-x 4 .)   Like ‘xref-find-definitions’ but switch to the other wi…
xref-find-references-at-mouse   Find references to the identifier at or around mouse cl…
xref-find-references-and-replace   Replace all references to identifier FROM with TO.      
xref-find-apropos (C-c l g a)   Find all meaningful symbols that match PATTERN.         
xref-find-definitions (M-.)   Find the definition of the identifier at point.         
xref-find-references (M-?)   Find references to the identifier at point.             
xref-find-definitions-other-frame (C-x 5 .)   Like ‘xref-find-definitions’ but switch to the other fr…" 10 18 (face (ivy-current-match ivy-minibuffer-match-face-2) mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 18 40 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 40 41 (face ivy-current-match marginalia--align t display (space :align-to (+ left 60))) 41 43 (face ivy-current-match) 43 99 (help-echo "Find the definition of identifier at or around mouse click." face (ivy-current-match marginalia-documentation)) 100 108 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 108 134 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 135 144 (face marginalia-key) 144 145 (marginalia--align t display (space :align-to (+ left 60))) 147 203 (help-echo "Like ‘xref-find-definitions’ but switch to the other window." face marginalia-documentation) 204 212 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 212 233 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 233 234 (marginalia--align t display (space :align-to (+ left 60))) 236 292 (help-echo "Find references to the identifier at or around mouse click." face marginalia-documentation) 293 301 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 301 325 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 325 326 (marginalia--align t display (space :align-to (+ left 60))) 328 384 (face marginalia-documentation) 385 393 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 393 402 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 403 414 (face marginalia-key) 414 415 (marginalia--align t display (space :align-to (+ left 60))) 417 473 (face marginalia-documentation) 474 482 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 482 495 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 496 501 (face marginalia-key) 501 502 (marginalia--align t display (space :align-to (+ left 60))) 504 560 (face marginalia-documentation) 561 569 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 569 581 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 582 587 (face marginalia-key) 587 588 (marginalia--align t display (space :align-to (+ left 60))) 590 646 (face marginalia-documentation) 647 655 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 655 680 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 681 690 (face marginalia-key) 690 691 (marginalia--align t display (space :align-to (+ left 60))) 693 749 (help-echo "Like ‘xref-find-definitions’ but switch to the other frame." face marginalia-documentation))) (lsp-find-references nil) (execute-extended-command nil "lsp-find-references" #("find-refere
lsp-find-references (C-c l g r)   Find references of the symbol under point.              
xref-find-references-at-mouse   Find references to the identifier at or around mouse cl…
xref-find-references-and-replace   Replace all references to identifier FROM with TO.      
xref-find-references (M-?)   Find references to the identifier at point.             
lsp-ui-peek-find-references (C-c l G r)   Find references to the IDENTIFIER at point.             " 12 16 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 16 26 (face (ivy-current-match ivy-minibuffer-match-face-2) mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 26 31 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 31 32 (face ivy-current-match) 32 43 (face (ivy-current-match marginalia-key)) 43 44 (face ivy-current-match marginalia--align t display (space :align-to (+ left 60))) 44 46 (face ivy-current-match) 46 102 (face (ivy-current-match marginalia-documentation)) 103 108 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 108 118 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 118 132 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 132 133 (marginalia--align t display (space :align-to (+ left 60))) 135 191 (help-echo "Find references to the identifier at or around mouse click." face marginalia-documentation) 192 197 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 197 207 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 207 224 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 224 225 (marginalia--align t display (space :align-to (+ left 60))) 227 283 (face marginalia-documentation) 284 289 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 289 299 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 299 304 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 305 310 (face marginalia-key) 310 311 (marginalia--align t display (space :align-to (+ left 60))) 313 369 (face marginalia-documentation) 370 382 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 382 392 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 392 397 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 398 409 (face marginalia-key) 409 410 (marginalia--align t display (space :align-to (+ left 60))) 412 468 (face marginalia-documentation))) (eval-buffer) (execute-extended-command nil "eval-buffer" #("eval
checkdoc-eval-current-buffer   Evaluate and check documentation for the current buffer.
eval-expression (M-:)   Evaluate EXP and print value in the echo area.          
eval-buffer   Execute the accessible portion of current buffer as Lis…
eval-defun (C-M-x)   Evaluate top-level form around point and instrument it …
debugger-eval-expression   Eval an expression, in an environment like that outside…
pp-eval-expression   Evaluate EXPRESSION and pretty-print its value.         
edebug-eval-expression   Evaluate an expression in the outside environment.      
edebug-eval-mode   Mode for evaluation list buffer while in Edebug.        
edebug-delete-eval-item   Delete the item under point and redisplay.              " 5 14 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 14 17 (face (ivy-current-match ivy-minibuffer-match-face-2) mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 17 33 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 33 34 (face ivy-current-match marginalia--align t display (space :align-to (+ left 40))) 34 36 (face ivy-current-match) 36 92 (face (ivy-current-match marginalia-documentation)) 93 96 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 96 108 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 109 114 (face marginalia-key) 114 115 (marginalia--align t display (space :align-to (+ left 40))) 117 173 (face marginalia-documentation) 174 177 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 177 185 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 185 186 (marginalia--align t display (space :align-to (+ left 40))) 188 244 (help-echo "Execute the accessible portion of current buffer as Lisp code." face marginalia-documentation) 245 248 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 248 255 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 256 263 (face marginalia-key) 263 264 (marginalia--align t display (space :align-to (+ left 40))) 266 322 (help-echo "Evaluate top-level form around point and instrument it if EDEBUG-IT is non-nil." face marginalia-documentation) 323 332 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 332 335 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 335 347 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 347 348 (marginalia--align t display (space :align-to (+ left 40))) 350 406 (help-echo "Eval an expression, in an environment like that outside the debugger." face marginalia-documentation) 407 410 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 410 413 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 413 425 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 425 426 (marginalia--align t display (space :align-to (+ left 40))) 428 484 (face marginalia-documentation) 485 492 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 492 495 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 495 507 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 507 508 (marginalia--align t display (space :align-to (+ left 40))) 510 566 (face marginalia-documentation) 567 574 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 574 577 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 577 583 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 583 584 (marginalia--align t display (space :align-to (+ left 40))) 586 642 (face marginalia-documentation) 643 657 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 657 660 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 660 666 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 666 667 (marginalia--align t display (space :align-to (+ left 40))) 669 725 (face marginalia-documentation))) (find-file "c:/Users/Gusta/.emacs" t) (find-file "c:/Users/Gusta/.emacs" t) (project-switch-project "c:/Users/Gusta/Downloads/Exa_API/") (ag-project "Atendimento Confirmado") (execute-extended-command nil "ag-project" #("ag-pro
web-mode-tag-previous (C-c C-t p)   Fetch previous tag.                                     
ag-project-dired   Recursively find files in current project matching PATT…
ag-project   Guess the root of the current project and search it wit…
magit-tag-prune   Offer to delete tags missing locally from REMOTE, and v…
ag-project-files   Search using ag for a given literal search STRING,      
ag-project-at-point   Guess the root of the current project and search it wit…
ag-project-regexp   Guess the root of the current project and search it wit…
ag-project-dired-regexp   Recursively find files in current project matching REGE…" 7 17 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 17 22 (face (ivy-current-match ivy-minibuffer-match-face-2) mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 22 28 (face ivy-current-match mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 28 29 (face ivy-current-match) 29 40 (face (ivy-current-match marginalia-key)) 40 41 (face ivy-current-match marginalia--align t display (space :align-to (+ left 60))) 41 43 (face ivy-current-match) 43 99 (face (ivy-current-match marginalia-documentation)) 100 105 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 105 116 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 116 117 (marginalia--align t display (space :align-to (+ left 60))) 119 175 (help-echo "Recursively find files in current project matching PATTERN." face marginalia-documentation) 176 181 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 181 186 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 186 187 (marginalia--align t display (space :align-to (+ left 60))) 189 245 (help-echo "Guess the root of the current project and search it with ag" face marginalia-documentation) 246 253 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 253 258 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 258 261 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 261 262 (marginalia--align t display (space :align-to (+ left 60))) 264 320 (help-echo "Offer to delete tags missing locally from REMOTE, and vice versa." face marginalia-documentation) 321 326 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 326 337 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 337 338 (marginalia--align t display (space :align-to (+ left 60))) 340 396 (face marginalia-documentation) 397 402 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 402 416 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 416 417 (marginalia--align t display (space :align-to (+ left 60))) 419 475 (help-echo "Guess the root of the current project and search it with ag" face marginalia-documentation) 476 481 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 481 493 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 493 494 (marginalia--align t display (space :align-to (+ left 60))) 496 552 (help-echo "Guess the root of the current project and search it with ag" face marginalia-documentation) 553 558 (face ivy-minibuffer-match-face-2 mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 558 576 (mouse-face ivy-minibuffer-match-highlight help-echo ivy--help-echo) 576 577 (marginalia--align t display (space :align-to (+ left 60))) 579 635 (help-echo "Recursively find files in current project matching REGEXP." face marginalia-documentation)))))
(setq eglot-command-history '("typescript-language-server.cmd "))
(setq yes-or-no-p-history '("yes"))
(setq goto-line-history '("10" "140"))
(setq ivy-history '(#("~/Downloads/Exa_APP/" 0 20 (ivy-index 0)) #("Agenda.tsx" 0 10 (ivy-index 2)) #("w32-set-console-output-codepage" 0 31 (ivy-index 0)) #("... (choose a dir)" 0 18 (ivy-index 1)) #("ag" 0 2 (ivy-index 195)) #("index.tsx" 0 9 (ivy-index 1)) #("multiple-cursors" 0 16 (ivy-index 1)) #("type" 0 4 (ivy-index 1)) "typescript-language-server.cmd" #("magit" 0 5 (ivy-index 31)) #("company" 0 7 (ivy-index 75)) #("avy-0.5.0" 0 9 (ivy-index 0))))
(setq swiper-history '(#("vertico" 0 7 (ivy-index 0)) #(" (use-package vertico" 0 1 (swiper-line-number 103 display "103 ") 1 2 (fontified t) 2 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t) 14 21 (fontified t face font-lock-constant-face)) #("save" 0 4 (ivy-index 2)) #(" (use-package savehist" 0 1 (swiper-line-number 121 display "121 ") 1 2 (fontified t) 2 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t) 14 22 (fontified t face font-lock-constant-face)) #("marg" 0 4 (ivy-index 0)) #(" ;; Marginalia" 0 1 (swiper-line-number 143 display "143 ") 1 4 (fontified t face font-lock-comment-delimiter-face) 4 14 (fontified t face font-lock-comment-face)) #(" (use-package savehist" 0 1 (swiper-line-number 109 display "109 ") 1 2 (fontified t) 2 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t) 14 22 (fontified t face font-lock-constant-face)) #("lsp" 0 3 (ivy-index 0)) #(" ;; Lsp" 0 1 (swiper-line-number 172 display "172 ") 1 4 (fontified t face font-lock-comment-delimiter-face) 4 7 (fontified t face font-lock-comment-face)) #(" ;; Lsp" 0 1 (swiper-line-number 172 display "172 ") 1 4 (fontified t face font-lock-comment-delimiter-face) 4 7 (fontified t face font-lock-comment-face)) #(" ;; Lsp" 0 1 (swiper-line-number 172 display "172 ") 1 4 (fontified t face font-lock-comment-delimiter-face) 4 7 (fontified t face font-lock-comment-face)) #("schedule" 0 8 (ivy-index 1)) #(" export async function PrepAgenda(params: ScheduleParams): Promise<[BookAppointment[], (Celula[] & DiaProps)[]]> {" 0 1 (swiper-line-number 64 display "64  ") 1 7 (part-side jsx face web-mode-keyword-face) 7 8 (part-side jsx) 8 13 (part-side jsx face web-mode-keyword-face) 13 14 (part-side jsx) 14 22 (part-side jsx face web-mode-keyword-face) 22 23 (part-side jsx) 23 33 (part-side jsx face web-mode-function-name-face) 33 34 (part-side jsx) 34 40 (part-side jsx face web-mode-variable-name-face) 40 114 (part-side jsx)) #("file" 0 4 (ivy-index 1)) #("   const file = supplier.logo_id ? await awsFilesRepository.get(supplier.logo_id) : undefined;" 0 1 (swiper-line-number 193 display "193 ") 1 3 (part-side jsx) 3 8 (part-side jsx face web-mode-keyword-face) 8 9 (part-side jsx) 9 13 (part-side jsx face web-mode-variable-name-face) 13 35 (part-side jsx) 35 40 (part-side jsx face web-mode-keyword-face) 40 60 (part-side jsx) 60 63 (part-side jsx face web-mode-function-call-face) 63 84 (part-side jsx) 84 93 (part-side jsx face web-mode-constant-face) 93 94 (part-side jsx)) #("pdf" 0 3 (ivy-index 1)) #("               PDF" 0 1 (swiper-line-number 706 display "706 ") 1 18 (part-side jsx jsx-depth 1)) #("               PDF" 0 1 (swiper-line-number 582 display "582 ") 1 18 (part-side jsx jsx-depth 1)) #("   if (file) {" 0 1 (swiper-line-number 197 display "197 ") 1 3 (part-side jsx) 3 5 (part-side jsx face web-mode-keyword-face) 5 14 (part-side jsx)) "logo" #("             PDF" 0 1 (ivy-index 441 swiper-line-number 442 display "442 ") 1 16 (ivy-index 441 part-side jsx jsx-depth 1)) #("PDF" 0 3 (ivy-index 0)) "Selecion" #("image" 0 5 (ivy-index 0)) #("       logo: { imageData: logo || '', x: 8, y: 2, width: 30, height: 30, alias: 'Logo' }," 0 1 (swiper-line-number 391 display "391 ") 1 7 (part-side jsx) 7 11 (part-side jsx face web-mode-variable-name-face) 11 15 (part-side jsx) 15 24 (part-side jsx face web-mode-variable-name-face) 24 34 (part-side jsx) 34 35 (part-side jsx part-token string syntax-table #1=(15) font-lock-face web-mode-javascript-string-face) 35 36 (part-side jsx part-token string syntax-table #1# font-lock-face web-mode-javascript-string-face) 36 38 (part-side jsx) 38 39 (part-side jsx face web-mode-variable-name-face) 39 44 (part-side jsx) 44 45 (part-side jsx face web-mode-variable-name-face) 45 50 (part-side jsx) 50 55 (part-side jsx face web-mode-variable-name-face) 55 61 (part-side jsx) 61 67 (part-side jsx face web-mode-variable-name-face) 67 73 (part-side jsx) 73 78 (part-side jsx face web-mode-variable-name-face) 78 80 (part-side jsx) 80 81 (part-side jsx part-token string syntax-table #1# font-lock-face web-mode-javascript-string-face) 81 85 (part-side jsx part-token string font-lock-face web-mode-javascript-string-face) 85 86 (part-side jsx part-token string syntax-table #1# font-lock-face web-mode-javascript-string-face) 86 89 (part-side jsx)) "jsP" #("helpf" 0 5 (ivy-index 0)) #(" ;; Helpful" 0 1 (swiper-line-number 218 display "218 ") 1 4 (fontified t face font-lock-comment-delimiter-face) 4 11 (fontified t face font-lock-comment-face)) #("help" 0 4 (ivy-index 0)) #(" ;; Helpful" 0 1 (swiper-line-number 218 display "218 ") 1 4 (fontified t face font-lock-comment-delimiter-face) 4 11 (fontified t face font-lock-comment-face)) "doc.tabelas" #("paciente" 0 8 (ivy-index 10)) #("       head: [['Data', 'Horário', 'Paciente', 'Horário', 'Paciente']]," 0 1 (swiper-line-number 305 display "305 ") 1 7 (part-side jsx) 7 11 (part-side jsx face web-mode-variable-name-face) 11 15 (part-side jsx) 15 16 (part-side jsx part-token string syntax-table #1=(15) font-lock-face web-mode-javascript-string-face) 16 20 (part-side jsx part-token string font-lock-face web-mode-javascript-string-face) 20 21 (part-side jsx part-token string syntax-table #1# font-lock-face web-mode-javascript-string-face) 21 23 (part-side jsx) 23 24 (part-side jsx part-token string syntax-table #1# font-lock-face web-mode-javascript-string-face) 24 31 (part-side jsx part-token string font-lock-face web-mode-javascript-string-face) 31 32 (part-side jsx part-token string syntax-table #1# font-lock-face web-mode-javascript-string-face) 32 34 (part-side jsx) 34 35 (part-side jsx part-token string syntax-table #1# font-lock-face web-mode-javascript-string-face) 35 43 (part-side jsx part-token string font-lock-face web-mode-javascript-string-face) 43 44 (part-side jsx part-token string syntax-table #1# font-lock-face web-mode-javascript-string-face) 44 46 (part-side jsx) 46 47 (part-side jsx part-token string syntax-table #1# font-lock-face web-mode-javascript-string-face) 47 54 (part-side jsx part-token string font-lock-face web-mode-javascript-string-face) 54 55 (part-side jsx part-token string syntax-table #1# font-lock-face web-mode-javascript-string-face) 55 57 (part-side jsx) 57 58 (part-side jsx part-token string syntax-table #1# font-lock-face web-mode-javascript-string-face) 58 66 (part-side jsx part-token string font-lock-face web-mode-javascript-string-face) 66 67 (part-side jsx part-token string syntax-table #1# font-lock-face web-mode-javascript-string-face) 67 70 (part-side jsx)) #("               PDF" 0 1 (swiper-line-number 582 display "582 ") 1 18 (part-side jsx jsx-depth 1)) #("               PDF" 0 1 (swiper-line-number 582 display "582 ") 1 18 (part-side jsx jsx-depth 1)) #("Atendimen" 0 9 (ivy-index 2)) #("                   <Button width=\"w-20\" text=\"Atendimento Confirmado\" disabled transparent border />" 0 1 (swiper-line-number 264 display "264 ") 1 19 (part-side jsx jsx-depth 2) 19 20 (part-side jsx jsx-depth 3 tag-name #1="button" tag-type void tag-beg 25 jsx-beg 3 font-lock-face web-mode-html-tag-bracket-face) 20 26 (part-side jsx jsx-depth 3 tag-name #1# tag-type void font-lock-face web-mode-html-tag-face) 26 27 (part-side jsx jsx-depth 3 tag-name #1# tag-type void) 27 28 (part-side jsx jsx-depth 3 tag-attr-beg 0 tag-attr t tag-name #1# tag-type void font-lock-face web-mode-html-attr-name-face) 28 32 (part-side jsx jsx-depth 3 tag-attr t tag-name #1# tag-type void font-lock-face web-mode-html-attr-name-face) 32 33 (part-side jsx jsx-depth 3 tag-attr t tag-name #1# tag-type void font-lock-face web-mode-html-attr-equal-face) 33 38 (part-side jsx jsx-depth 3 tag-attr t tag-name #1# tag-type void font-lock-face web-mode-html-attr-value-face) 38 39 (part-side jsx jsx-depth 3 tag-attr t tag-attr-end 5 tag-name #1# tag-type void font-lock-face web-mode-html-attr-value-face) 39 40 (part-side jsx jsx-depth 3 tag-name #1# tag-type void) 40 41 (part-side jsx jsx-depth 3 tag-attr-beg 0 tag-attr t tag-name #1# tag-type void font-lock-face web-mode-html-attr-name-face) 41 44 (part-side jsx jsx-depth 3 tag-attr t tag-name #1# tag-type void font-lock-face web-mode-html-attr-name-face) 44 45 (part-side jsx jsx-depth 3 tag-attr t tag-name #1# tag-type void font-lock-face web-mode-html-attr-equal-face) 45 68 (part-side jsx jsx-depth 3 tag-attr t tag-name #1# tag-type void font-lock-face web-mode-html-attr-value-face) 68 69 (part-side jsx jsx-depth 3 tag-attr t tag-attr-end 4 tag-name #1# tag-type void font-lock-face web-mode-html-attr-value-face) 69 70 (part-side jsx jsx-depth 3 tag-name #1# tag-type void) 70 71 (part-side jsx jsx-depth 3 tag-attr-beg 0 tag-attr t tag-name #1# tag-type void font-lock-face web-mode-html-attr-name-face) 71 77 (part-side jsx jsx-depth 3 tag-attr t tag-name #1# tag-type void font-lock-face web-mode-html-attr-name-face) 77 78 (part-side jsx jsx-depth 3 tag-attr t tag-attr-end 0 tag-name #1# tag-type void font-lock-face web-mode-html-attr-name-face) 78 79 (part-side jsx jsx-depth 3 tag-name #1# tag-type void) 79 80 (part-side jsx jsx-depth 3 tag-attr-beg 0 tag-attr t tag-name #1# tag-type void font-lock-face web-mode-html-attr-name-face) 80 89 (part-side jsx jsx-depth 3 tag-attr t tag-name #1# tag-type void font-lock-face web-mode-html-attr-name-face) 89 90 (part-side jsx jsx-depth 3 tag-attr t tag-attr-end 0 tag-name #1# tag-type void font-lock-face web-mode-html-attr-name-face) 90 91 (part-side jsx jsx-depth 3 tag-name #1# tag-type void) 91 92 (part-side jsx jsx-depth 3 tag-attr-beg 0 tag-attr t tag-name #1# tag-type void font-lock-face web-mode-html-attr-name-face) 92 96 (part-side jsx jsx-depth 3 tag-attr t tag-name #1# tag-type void font-lock-face web-mode-html-attr-name-face) 96 97 (part-side jsx jsx-depth 3 tag-attr t tag-attr-end 0 tag-name #1# tag-type void font-lock-face web-mode-html-attr-name-face) 97 98 (part-side jsx jsx-depth 3 tag-name #1# tag-type void) 98 99 (part-side jsx jsx-depth 3 tag-name #1# tag-type void font-lock-face web-mode-html-tag-bracket-face) 99 100 (part-side jsx jsx-depth 3 tag-name #1# tag-type void tag-end t jsx-end 3 font-lock-face web-mode-html-tag-bracket-face)) "atendi" #("web-mo" 0 6 (ivy-index 0)) #(" (use-package web-mode  :ensure t" 0 1 (swiper-line-number 198 display "198 ") 1 2 (fontified t) 2 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t) 14 22 (fontified t face font-lock-constant-face) 22 24 (fontified t) 24 31 (fontified t face font-lock-builtin-face) 31 33 (fontified t)) #(" (use-package lsp-mode" 0 1 (swiper-line-number 182 display "182 ") 1 2 (fontified t) 2 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t) 14 22 (fontified t face font-lock-constant-face)) #(" ;; Lsp" 0 1 (swiper-line-number 181 display "181 ") 1 4 (fontified t face font-lock-comment-delimiter-face) 4 7 (fontified t face font-lock-comment-face)) "typescri" #("tsx" 0 3 (ivy-index 0)) #("   :mode \"\\\\.tsx?\\\\'\"" 0 1 (swiper-line-number 199 display "199 ") 1 3 (fontified t) 3 8 (fontified t face font-lock-builtin-face) 8 9 (fontified t) 9 21 (fontified t face font-lock-string-face)) #(" ;; Lsp" 0 1 (swiper-line-number 181 display "181 ") 1 4 (fontified t face font-lock-comment-delimiter-face) 4 7 (fontified t face font-lock-comment-face)) #("lsp-i" 0 5 (ivy-index 0)) #(" (use-package lsp-ivy)" 0 1 (swiper-line-number 197 display "197 ") 1 2 (fontified t) 2 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t) 14 21 (fontified t face font-lock-constant-face) 21 22 (fontified t)) #("company" 0 7 (ivy-index 0)) #(" ;; Company" 0 1 (swiper-line-number 175 display "175 ") 1 4 (fontified t face font-lock-comment-delimiter-face) 4 11 (fontified t face font-lock-comment-face)) "compa" #(" ;; Lsp" 0 1 (swiper-line-number 181 display "181 ") 1 4 (fontified t face font-lock-comment-delimiter-face) 4 7 (fontified t face font-lock-comment-face)) #(" ;; Lsp" 0 1 (swiper-line-number 181 display "181 ") 1 4 (fontified t face font-lock-comment-delimiter-face) 4 7 (fontified t face font-lock-comment-face)) "yasn" #(" ;; Lsp" 0 1 (swiper-line-number 181 display "181 ") 1 4 (fontified t face font-lock-comment-delimiter-face) 4 7 (fontified t face font-lock-comment-face)) #("dap" 0 3 (ivy-index 0)) #(" (use-package dap-mode)" 0 1 (swiper-line-number 199 display "199 ") 1 2 (fontified t) 2 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t) 14 22 (fontified t face font-lock-constant-face) 22 23 (fontified t)) "ivy" "which-ke" #("eglot" 0 5 (ivy-index 0)) #(" ;; Eglot" 0 1 (swiper-line-number 181 display "181 ") 1 4 (fontified t face font-lock-comment-delimiter-face) 4 9 (fontified t face font-lock-comment-face)) #("doom" 0 4 (ivy-index 0)) #(" ;;Doom theme" 0 1 (swiper-line-number 69 display "69  ") 1 3 (fontified t face font-lock-comment-delimiter-face) 3 13 (fontified t face font-lock-comment-face)) #(" ;;Doom theme" 0 1 (swiper-line-number 69 display "69  ") 1 3 (fontified t face font-lock-comment-delimiter-face) 3 13 (fontified t face font-lock-comment-face)) #("all-the" 0 7 (ivy-index 0)) #("   all-the-icons                  20240108.559   available    melpa    A library for inserting Developer icons" 0 1 (swiper-line-number 117 display "117  ") 1 3 (tabulated-list-id #1=#s(package-desc all-the-icons (20240108 559) "A library for inserting Developer icons" ((emacs (24 3))) tar "melpa" nil ((:commit . "ee414384938ccf2ce93c77d717b85dc5538a257d") (:authors ("Dominic Charlesworth" . "dgc336@gmail.com")) (:maintainers ("Dominic Charlesworth" . "dgc336@gmail.com")) (:maintainer "Dominic Charlesworth" . "dgc336@gmail.com") (:keywords "convenient" "lisp") (:url . "https://github.com/domtronn/all-the-icons.el")) nil) tabulated-list-entry #3=[("all-the-icons" face package-name font-lock-face package-name follow-link t package-desc #1# action package-menu-describe-package) #("20240108.559" 0 12 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("A library for inserting Developer icons" 0 39 (font-lock-face package-description))]) 3 16 (button (t) category default-button face package-name font-lock-face package-name follow-link t package-desc #1# action package-menu-describe-package tabulated-list-column-name #2="Package" tabulated-list-id #1# tabulated-list-entry #3#) 16 17 (tabulated-list-column-name #2# tabulated-list-id #1# tabulated-list-entry #3#) 17 34 (display (space :align-to 33) tabulated-list-column-name #2# tabulated-list-id #1# tabulated-list-entry #3#) 34 46 (font-lock-face package-status-available help-echo #("Version: 20240108.559" 9 21 (font-lock-face package-status-available)) tabulated-list-column-name #4="Version" tabulated-list-id #1# tabulated-list-entry #3#) 46 47 (tabulated-list-column-name #4# tabulated-list-id #1# tabulated-list-entry #3#) 47 49 (display (space :align-to 48) tabulated-list-column-name #4# tabulated-list-id #1# tabulated-list-entry #3#) 49 58 (font-lock-face package-status-available help-echo #("Status: available" 8 17 (font-lock-face package-status-available)) tabulated-list-column-name #5="Status" tabulated-list-id #1# tabulated-list-entry #3#) 58 59 (tabulated-list-column-name #5# tabulated-list-id #1# tabulated-list-entry #3#) 59 62 (display (space :align-to 61) tabulated-list-column-name #5# tabulated-list-id #1# tabulated-list-entry #3#) 62 67 (font-lock-face package-status-available help-echo #("Archive: melpa" 9 14 (font-lock-face package-status-available)) tabulated-list-column-name #6="Archive" tabulated-list-id #1# tabulated-list-entry #3#) 67 68 (tabulated-list-column-name #6# tabulated-list-id #1# tabulated-list-entry #3#) 68 71 (display (space :align-to 70) tabulated-list-column-name #6# tabulated-list-id #1# tabulated-list-entry #3#) 71 110 (font-lock-face package-description help-echo #("Description: A library for inserting Developer icons" 13 52 (font-lock-face package-description)) tabulated-list-column-name "Description" tabulated-list-id #1# tabulated-list-entry #3#)) #("   (savehist-mode))" 0 1 (swiper-line-number 85 display "85  ") 1 19 (fontified t)) #("model" 0 5 (ivy-index 0)) #(" (use-package doom-modeline" 0 1 (swiper-line-number 66 display "66  ") 1 2 (fontified t) 2 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t) 14 27 (fontified t face font-lock-constant-face)) #("bar" 0 3 (ivy-index 0)) #(" (tool-bar-mode 0)" 0 1 (swiper-line-number 42 display "42  ") 1 18 (fontified t)) #(" " 0 1 (ivy-index 161 swiper-line-number 162 display "162 ")) "compa" "compa" "avy" #("helpful" 0 7 (ivy-index 1)) #("   helpful                        20231028.516   available    melpa    A better *help* buffer" 0 1 (swiper-line-number 2618 display "2618 ") 1 3 (tabulated-list-id #1=#s(package-desc helpful (20231028 516) "A better *help* buffer" ((emacs (25)) (dash (2 18 0)) (s (1 11 0)) (f (0 20 0)) (elisp-refs (1 2))) tar "melpa" nil ((:commit . "a32a5b3d959a7fccf09a71d97b3d7c888ac31c69") (:authors ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainers ("Wilfred Hughes" . "me@wilfred.me.uk")) (:maintainer "Wilfred Hughes" . "me@wilfred.me.uk") (:keywords "help" "lisp") (:url . "https://github.com/Wilfred/helpful")) nil) tabulated-list-entry #2=[("helpful" face package-name font-lock-face package-name follow-link t package-desc #1# action package-menu-describe-package) #("20231028.516" 0 12 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("A better *help* buffer" 0 22 (font-lock-face package-description))]) 3 10 (button (t) category default-button face package-name font-lock-face package-name follow-link t package-desc #1# action package-menu-describe-package tabulated-list-column-name #3="Package" tabulated-list-id #1# tabulated-list-entry #2#) 10 11 (tabulated-list-column-name #3# tabulated-list-id #1# tabulated-list-entry #2#) 11 34 (display (space :align-to 33) tabulated-list-column-name #3# tabulated-list-id #1# tabulated-list-entry #2#) 34 46 (font-lock-face package-status-available help-echo #("Version: 20231028.516" 9 21 (font-lock-face package-status-available)) tabulated-list-column-name #4="Version" tabulated-list-id #1# tabulated-list-entry #2#) 46 47 (tabulated-list-column-name #4# tabulated-list-id #1# tabulated-list-entry #2#) 47 49 (display (space :align-to 48) tabulated-list-column-name #4# tabulated-list-id #1# tabulated-list-entry #2#) 49 58 (font-lock-face package-status-available help-echo #("Status: available" 8 17 (font-lock-face package-status-available)) tabulated-list-column-name #5="Status" tabulated-list-id #1# tabulated-list-entry #2#) 58 59 (tabulated-list-column-name #5# tabulated-list-id #1# tabulated-list-entry #2#) 59 62 (display (space :align-to 61) tabulated-list-column-name #5# tabulated-list-id #1# tabulated-list-entry #2#) 62 67 (font-lock-face package-status-available help-echo #("Archive: melpa" 9 14 (font-lock-face package-status-available)) tabulated-list-column-name #6="Archive" tabulated-list-id #1# tabulated-list-entry #2#) 67 68 (tabulated-list-column-name #6# tabulated-list-id #1# tabulated-list-entry #2#) 68 71 (display (space :align-to 70) tabulated-list-column-name #6# tabulated-list-id #1# tabulated-list-entry #2#) 71 93 (font-lock-face package-description help-echo #("Description: A better *help* buffer" 13 35 (font-lock-face package-description)) tabulated-list-column-name "Description" tabulated-list-id #1# tabulated-list-entry #2#)) #("line" 0 4 (ivy-index 3)) #(" (global-display-line-numbers-mode)" 0 1 (swiper-line-number 63 display "63  ") 1 35 (fontified t)) #("avy" 0 3 (ivy-index 0)) #(" ;; Avy" 0 1 (swiper-line-number 140 display "140 ") 1 4 (fontified t face font-lock-comment-delimiter-face) 4 7 (fontified t face font-lock-comment-face)) #("    '(avy move-text use-package marginalia vertico smex undo-tree)))" 0 1 (swiper-line-number 173 display "173 ") 1 4 (fontified t) 4 66 (fontified t) 66 67 (fontified t) 67 68 (fontified t)) #("   avy                            0.5.0          available    gnu      Jump to arbitrary positions in visible text and select text quickly." 0 1 (swiper-line-number 283 display "283  ") 1 3 (tabulated-list-id #1=#s(package-desc avy (0 5 0) "Jump to arbitrary positions in visible text and select text quickly." ((emacs (24 1)) (cl-lib (0 5))) tar "gnu" nil ((:url . "https://github.com/abo-abo/avy") (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com") (:authors ("Oleh Krehel" . "ohwoeowho@gmail.com")) (:keywords "point" "location")) nil) tabulated-list-entry #2=[("avy" face package-name font-lock-face package-name follow-link t package-desc #1# action package-menu-describe-package) #("0.5.0" 0 5 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("gnu" 0 3 (font-lock-face package-status-available)) #("Jump to arbitrary positions in visible text and select text quickly." 0 68 (font-lock-face package-description))]) 3 6 (button (t) category default-button face package-name font-lock-face package-name follow-link t package-desc #1# action package-menu-describe-package tabulated-list-column-name #3="Package" tabulated-list-id #1# tabulated-list-entry #2#) 6 7 (tabulated-list-column-name #3# tabulated-list-id #1# tabulated-list-entry #2#) 7 34 (display (space :align-to 33) tabulated-list-column-name #3# tabulated-list-id #1# tabulated-list-entry #2#) 34 39 (font-lock-face package-status-available help-echo #("Version: 0.5.0" 9 14 (font-lock-face package-status-available)) tabulated-list-column-name #4="Version" tabulated-list-id #1# tabulated-list-entry #2#) 39 40 (tabulated-list-column-name #4# tabulated-list-id #1# tabulated-list-entry #2#) 40 49 (display (space :align-to 48) tabulated-list-column-name #4# tabulated-list-id #1# tabulated-list-entry #2#) 49 58 (font-lock-face package-status-available help-echo #("Status: available" 8 17 (font-lock-face package-status-available)) tabulated-list-column-name #5="Status" tabulated-list-id #1# tabulated-list-entry #2#) 58 59 (tabulated-list-column-name #5# tabulated-list-id #1# tabulated-list-entry #2#) 59 62 (display (space :align-to 61) tabulated-list-column-name #5# tabulated-list-id #1# tabulated-list-entry #2#) 62 65 (font-lock-face package-status-available help-echo #("Archive: gnu" 9 12 (font-lock-face package-status-available)) tabulated-list-column-name #6="Archive" tabulated-list-id #1# tabulated-list-entry #2#) 65 66 (tabulated-list-column-name #6# tabulated-list-id #1# tabulated-list-entry #2#) 66 71 (display (space :align-to 70) tabulated-list-column-name #6# tabulated-list-id #1# tabulated-list-entry #2#) 71 139 (font-lock-face package-description help-echo #("Description: Jump to arbitrary positions in visible text and select text quickly." 13 81 (font-lock-face package-description)) tabulated-list-column-name "Description" tabulated-list-id #1# tabulated-list-entry #2#)) #("swip" 0 4 (ivy-index 0)) #(" ;; Ivy & Swiper" 0 1 (swiper-line-number 70 display "70  ") 1 4 (fontified t face font-lock-comment-delimiter-face) 4 16 (fontified t face font-lock-comment-face)) "straig" "ido" "dire" "res"))
(setq read-number-history '("-15" "10"))
(setq buffer-name-history '(#("Gusta" 0 5 (ivy-index 0)) #("*Directory*" 0 11 (ivy-index 4)) "index.tsx" ".emacs" "*Messages*" ".emacs" "*Warnings*" ".emacs" "*Warnings*" ".emacs" "*Warnings*" ".emacs" "*Warnings*" "*Messages*" ".emacs" "*Packages*"))
(setq minibuffer-history '("Selecione o Tipo do" "Selecione o tipo do arquivo" "console" "console.log" "Atendimento Confirmado" "move-text" "~/Downloads/Exa_APP/" "... (choose a dir)" "pastels-on-dark"))
(setq extended-command-history '(#("package-menu-mark-install" 0 25 (ivy-index 0)) #("savehist-mode" 0 13 (ivy-index 1)) #("package-list-packages" 0 21 (ivy-index 1)) #("eval-buffer" 0 11 (ivy-index 2)) #("package-show-package-list" 0 25 (ivy-index 0)) #("imenu" 0 5 (ivy-index 3)) #("ag-project" 0 10 (ivy-index 1)) #("find-function" 0 13 (ivy-index 5)) #("xref-find-definitions" 0 21 (ivy-index 5)) #("lsp-find-references" 0 19 (ivy-index 0)) #("package-install" 0 15 (ivy-index 0)) #("flymake-show-buffer-diagnostics" 0 31 (ivy-index 0)) #("flymake-goto-next-error" 0 23 (ivy-index 5)) #("flymake-proc-compile" 0 20 (ivy-index 0)) #("flymake-goto-diagnostic" 0 23 (ivy-index 2)) #("flymake-show-diagnostic" 0 23 (ivy-index 9)) #("lsp" 0 3 (ivy-index 159)) #("flymake-project-diagnostics-mode" 0 32 (ivy-index 17)) #("flymake-menu" 0 12 (ivy-index 11)) #("describe-mode" 0 13 (ivy-index 3)) #("lsp-install-server" 0 18 (ivy-index 1)) #("lsp-mode" 0 8 (ivy-index 2)) #("eglot-reconnect" 0 15 (ivy-index 1)) #("eglot" 0 5 (ivy-index 9)) #("customize-themes" 0 16 (ivy-index 0)) #("all-the-icons-install-fonts" 0 27 (ivy-index 0)) #("nerd-icons-install-fonts" 0 24 (ivy-index 0)) #("savehist-save" 0 13 (ivy-index 0)) #("company-mode" 0 12 (ivy-index 0)) #("package-delete" 0 14 (ivy-index 0)) #("checkdoc-eval-current-buffer" 0 28 (ivy-index 0)) "drag-stuff-mode" "flymake-switch-to-log-buffer" "web-mode" "typescript-ts-mode" "package-refresh-contents" "marginalia-cycle" "org-mode" "consult-imenu" "consult-git-grep" "load-theme" "vertico-mode"))
(setq file-name-history '(#("c:/Users/Gusta/.emacs" 0 21 (ivy-index 3)) "~/Downloads/Exa_APP/src/components/Welcome/FormWizard/index.tsx" "~/Downloads/Exa_APP/src/components/Welcome/FormWizard/index.tsx" "~/Downloads/Exa_APP/src/pages/s/medical-reports/bab/[babId]/index.tsx" #("c:/Users/Gusta/Downloads/Exa_APP/src/components/s/Scheduler/AppointmentList/Reports/" 0 84 (ivy-index 0)) #("c:/Users/" 0 9 (ivy-index 1)) #("c:/Users/Gusta/" 0 15 (ivy-index 0)) #("c:/Users/Gusta/Downloads/Exa_APP/src/components/s/Scheduler/AppointmentList/" 0 76 (ivy-index 1)) "~/Downloads/Exa_APP/src/pages/s/agenda.tsx" #("c:/Users/Gusta/Downloads/Exa_API/" 0 33 (ivy-index 0)) "~/Downloads/Exa_API/src/routes.ts" "~/Downloads/Exa_APP/src/pages/s/medical-reports/bab/[babId]/index.tsx" "~/Downloads/Exa_APP/src/pages/s/medical-reports/bab/[babId]/index.tsx" "~/Downloads/Exa_APP/src/components/Welcome/FormWizard/index.tsx" "~/Downloads/Exa_APP/src/components/Welcome/FormWizard/index.tsx" "~/Downloads/Exa_APP/src/components/Welcome/FormWizard/index.tsx" "~/Downloads/Exa_APP/src/components/Welcome/FormWizard/index.tsx" "~/Downloads/Exa_APP/src/components/Welcome/FormWizard/index.tsx" "~/Downloads/Exa_APP/src/components/Welcome/FormWizard/index.tsx" "~/Downloads/Exa_APP/src/components/Welcome/FormWizard/index.tsx" #("c:/Users/Gusta/Downloads/AlltheIcons" 0 36 (ivy-index 0)) #("c:/Users/Gusta/Downloads/NerdFonts" 0 34 (ivy-index 0)) #("c:/Users/Gusta/.emacs.d/" 0 24 (ivy-index 0)) "~/.emacs" "~/Downloads/Exa_APP/src/components/Wizard/index.tsx" "~/.emacs" "~/Downloads/Exa_APP/" "~/Downloads/Exa_APP/src/components/Wizard/index.tsx" "~/.emacs" "~/Downloads/Exa_APP/src/components/Wizard/index.tsx" "~/.emacs" "~/Downloads/Exa_APP/src/components/Wizard/index.tsx" "~/Downloads/Exa_APP/" "~/.emacs" "~/Downloads/" "~Gusta/" "~/.emacs" "~/Downloads/Exa_APP/.env" "~/.emacs"))
(setq minibuffer-history '("Selecione o Tipo do" "Selecione o tipo do arquivo" "console" "console.log" "Atendimento Confirmado" "move-text" "~/Downloads/Exa_APP/" "... (choose a dir)" "pastels-on-dark"))
